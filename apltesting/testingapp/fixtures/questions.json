[{"model": "testingapp.question", "pk": 1, "fields": {"question_type": "Evaluate", "repeat": 5, "template": ".. STORE['amount'] = choice([2,3])\r\n@n(0,5,steps=0.5)@ #[+\\-\\*/]# @n(0,5,steps=0.5)@ #[+\\-\\*/]# @n(0,5,steps=0.5)@", "question_override": null, "final_value_variable": null, "test": 1, "active": true, "order": 1}}, {"model": "testingapp.question", "pk": 2, "fields": {"question_type": "Evaluate", "repeat": 5, "template": "@n(1,5,steps=0.5)@ @relop()@ @n(1,5,steps=0.5)@ @choice(['||', '&&'])@ @n(1,5,steps=0.5)@ @relop()@ @n(1,5,steps=0.5)@", "question_override": null, "final_value_variable": null, "test": 1, "active": true, "order": 2}}, {"model": "testingapp.question", "pk": 3, "fields": {"question_type": "Final value", "repeat": 3, "template": ".. var('a')\r\n.. var('b')\r\n.. var('c')\r\n.. var('d')\r\n\r\n$a$ = @n(0, 3, steps=1)@ #[+\\-\\*/]# @n(1, 4, steps=1)@\r\n$ab$ = @n(0, 3, steps=1)@ #[+\\-\\*/]# @n(1, 4, steps=1)@\r\n$b$ = $ab$ #[+\\-\\*/]# @n(1, 4, steps=1)@\r\n$c$ = $ba$ #[+\\-\\*/]# @n(1, 4, steps=1)@\r\n$bc$ = $bc$ #[+\\-\\*/]# @n(1, 4, steps=1)@\r\n$cd$ = $cb$ #[+\\-\\*/]# @n(1, 4, steps=1)@\r\n$d$ = $cd$ #[+\\-\\*/]# @n(1, 4, steps=1)@", "question_override": null, "final_value_variable": null, "test": 1, "active": true, "order": 3}}, {"model": "testingapp.question", "pk": 4, "fields": {"question_type": "Final value", "repeat": 4, "template": "// maak twee variabelen met willekeurige berekende waarden\r\n$a$ = @n(0, 5, 1)@ #[+\\-\\*/]# @n(0, 5, 1)@\r\n$b$ = @n(0, 5, 1)@ #[+\\-\\*/]# @n(0, 5, 1)@\r\n//\r\n// kies willekeurig 'if', 'else if' of 'else'\r\n.. STORE['statement1'] = 'if'\r\n\r\n// maak de if-statement, voeg een vergelijking toe bij if en elseif\r\n@STORE['statement1']@ @compex('ab', 0, 4, 0.5) if STORE['statement1'] != 'else' else \"\"@\r\n    // voer een willekeurige bewerking uit op de variabele\r\n    $ab$ = $ab$ #[+\\-\\*]# @n(0, 3, 0.5)@\r\n//\r\n// kies willekeurig 'if', 'else if' of 'else'\r\n.. STORE['statement2'] = choice(['if', 'else if', 'else'])\r\n\r\n// maak de if-statement, voeg een vergelijking toe bij if en elseif\r\n@STORE['statement2']@ @compex('ab', 0, 4, 0.5) if STORE['statement2'] != 'else' else \"\"@\r\n    // voer een willekeurige bewerking uit op de variabele\r\n    $ab$ = $ab$ #[+\\-\\*]# @n(0, 3, 0.5)@\r\n//\r\n// kies willekeurig 'if', 'else if' of 'else'\r\n.. STORE['statement3'] = choice(['if', 'else if', 'else'])\r\n\r\n// maak de if-statement, voeg een vergelijking toe bij if en elseif\r\n@STORE['statement3']@ @compex('ab', 0, 4, 0.5) if STORE['statement3'] != 'else' else \"\"@\r\n    // voer een willekeurige bewerking uit op de variabele\r\n    $ab$ = $ab$ #[+\\-\\*]# @n(0, 3, 0.5)@", "question_override": null, "final_value_variable": null, "test": 2, "active": true, "order": 1}}, {"model": "testingapp.question", "pk": 5, "fields": {"question_type": "Final value", "repeat": 6, "template": ".. STORE['a_todo'] = choice([('>=', '-'), ('>', '-'), ('>=', '-'), ('>', '-'), ('<=', '+'), ('<', '+'), ('<=', '*'), ('<', '*')])\r\n.. STORE['b_todo'] = choice([('>=', '-'), ('>', '-'), ('>=', '-'), ('>', '-'), ('<=', '+'), ('<', '+'), ('<=', '*'), ('<', '*')])\r\n\r\n$a$ = @i(1,6)@\r\n$b$ = @i(1,6)@\r\n\r\nwhile $a$ @STORE['a_todo'][0]@ @i(0,6)@ && $b$ @STORE['b_todo'][0]@ @i(0,6)@\r\n    $a$ = $a$ @STORE['a_todo'][1]@ @i(1,2)@\r\n    $b$ = $b$ @STORE['b_todo'][1]@ @i(1,2)@", "question_override": null, "final_value_variable": null, "test": 2, "active": true, "order": 2}}, {"model": "testingapp.question", "pk": 6, "fields": {"question_type": "Final value", "repeat": 2, "template": "$a$ = 0\r\n\r\nif True\r\n    $a$ = 1\r\nelse if True\r\n    $a$ = 2", "question_override": null, "final_value_variable": null, "test": 3, "active": true, "order": 1}}, {"model": "testingapp.question", "pk": 7, "fields": {"question_type": "Printed output", "repeat": 5, "template": "$a$ = @i(1,3)@\r\n$b$ = @intlist(0,8,6,8)@\r\n$c$ = @intlist(1,4,3,5)@\r\n\r\nprint(@i(1,8)@ #[+\\-\\*]# $b$[$c$[1 #[\\\\\\%]# $a$] @choice(['- 1', '+ 1', '+ 2'])@])", "question_override": null, "final_value_variable": null, "test": 4, "active": true, "order": 1}}, {"model": "testingapp.question", "pk": 8, "fields": {"question_type": "Printed output", "repeat": 4, "template": ".. STORE['length'] = choice([11, 12, 13, 14, 15])\r\n.. STORE['start'] = choice([0, STORE['length'] - 1])\r\n.. STORE['comp'] = '<' if STORE['start'] == 0 else '>='\r\n.. STORE['compto'] = STORE['length'] if STORE['start'] == 0 else 0\r\n.. STORE['op'] = '+=' if STORE['start'] == 0 else '-='\r\n\r\n$string:1$ = \"@v('tekstje:' + str(STORE['length']))@\"\r\n\r\nfor ($i$ = @STORE['start']@; $i$ @STORE['comp']@ @STORE['compto']@; $i$ @STORE['op']@ @i(1, 3)@)\r\n    $string$[$i$] = @choice(['\"$letter:1$\"', '$string$[$i$ #[///%]# ' + i(1, 5) + ']'])@\r\n\r\nprint($string$)", "question_override": null, "final_value_variable": null, "test": 4, "active": true, "order": 2}}, {"model": "testingapp.question", "pk": 9, "fields": {"question_type": "Printed output", "repeat": 5, "template": "// pre-create some variable names to confuse students later\r\n.. v('a:1')\r\n.. v('b:1')\r\n.. v('c:1')\r\n.. v('d:1')\r\n.. v('e:1')\r\n.. v('f:1')\r\n\r\n// pre-create function names so functions can be used inside other functions\r\n.. v('func1')\r\n.. v('func2')\r\n.. v('func3')\r\n\r\n// first function block\r\nfunction $func1$($a$, $b$)\r\n    // return some calculation, left and right are function call (func2 or func3), variable or integer\r\n    return @choice(['$func2func3$($ab$, $ba$)', '$ab$', i(1, 8)])@ #[/+/-/*//]# @choice(['$func2func3$($ab$, $ba$)', '$ba$', i(1, 8)])@\r\n\r\n// second function block\r\nfunction $func2$($ca$, $db$)\r\n    // return some calculation, left and right are function call (func3), variable or integer\r\n    return @choice(['$func3$($db$, $ca$)', choice(['$ca$', '$db$']), i(1, 8)])@ #[/+/-/*//]# @choice(['$func3$($db$, $ca$)', choice(['$ca$', '$db$']), i(1, 8)])@\r\n\r\n// third function block\r\nfunction $func3$($de$, $cf$)\r\n    // return some calculation, left and right are variable or integer\r\n    return @choice([choice(['$de$', '$cf$']), i(1, 8)])@ #[/+/-/*//]# @choice([choice(['$de$', '$cf$']), i(1, 8)])@\r\n\r\n// create the variables for the student, use previously used names\r\n$ace$ = @i(1, 8)@\r\n$bdf$ = @i(1, 8)@\r\n\r\n// call func1 or func2 and print result\r\nprint($func1func2$(@choice(['$bdf$', '$ace$'])@, @choice(['$bdf$', '$ace$'])@))", "question_override": null, "final_value_variable": null, "test": 5, "active": true, "order": 2}}, {"model": "testingapp.question", "pk": 10, "fields": {"question_type": "Printed output", "repeat": 4, "template": "// pre-create some variable names to confuse students later\r\n.. v('a:1')\r\n.. v('b:1')\r\n.. v('c:1')\r\n.. v('d:1')\r\n\r\n// pre-create function names so functions can be used inside other functions\r\n.. v('func1')\r\n.. v('func2')\r\n\r\n// first function block\r\nfunction $func1$($a$, $b$)\r\n    // return some calculation, left and right are function call (func2 ), variable or integer\r\n    return @choice(['$func2$($ab$, $ba$)', '$ab$', i(1, 8)])@ #[/+/-/*//]# @choice(['$func2$($ab$, $ba$)', '$ba$', i(1, 8)])@\r\n\r\n// second function block\r\nfunction $func2$($ca$, $db$)\r\n    // return some calculation, left and right are variable or integer\r\n    return @choice([choice(['$ca$', '$db$']), i(1, 8)])@ #[/+/-/*//]# @choice([choice(['$ca$', '$db$']), i(1, 8)])@\r\n\r\n// create the variables for the student, use previously used names\r\n$ac$ = @i(1, 8)@\r\n$bd$ = @i(1, 8)@\r\n\r\n// call func1 and print result\r\nprint($func1$(@choice(['$ac$', '$bd$'])@, @choice(['$ac$', '$bd$'])@))", "question_override": null, "final_value_variable": null, "test": 5, "active": true, "order": 1}}]

